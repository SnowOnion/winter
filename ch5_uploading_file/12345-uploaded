#include<cstdio>
#include<memory.h>

const int big=(1<<31)-1;

char s[1010];

char cset[]={'0','1','2','3'};
const int S=4;
int N;

int sum;

/**precon: 首位不是0*/
int check(char* str,int len){
    int exist[S];
    memset(exist,0,sizeof(exist));
    for(int i=0;i<len;i++){
        int v=str[i]-'0';
        exist[v]=1;
        if(v==0){
            if(exist[1]){
                return 0;
            }
        }
        else if(v==2){
            if(exist[3]){
                return 0;
            }
        }
    }
    for(int i=0;i<S;i++){
        if(!exist[i]){
            return 0;
        }
    }
    return 1;
}


void dfs(int depth){
    if(depth>=N){
        //printf("%s\n",s);
        if(s[0]!='0' && check(s,N)){
            printf("%s\n",s);
            sum++;
        }
    }
    else{
        for(int i=0;i<S;i++){
            s[depth]=cset[i];
            dfs(depth+1);
        }
    }

}




int main(){
    for(N=6;N<7;N++){
        memset(s,0,sizeof(s));
    sum=0;

    dfs(0);

    printf("%d--%d\n",N,sum);
    }

    return 0;
}
